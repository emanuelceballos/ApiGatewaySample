using System;
using System.IdentityModel.Tokens.Jwt;
using System.Security.Claims;
using System.Text;
using Microsoft.AspNetCore.Mvc;
using Microsoft.IdentityModel.Tokens;

namespace AuthApi.Controllers.v2
{
    [Route("api/v2/[controller]")]
    [ApiController]
    public class AuthController : ControllerBase
    {
        private readonly string _issuerSigningKey = "SomeCoolAtLeast16CharsPassword";
        private const double _minutesExpiresIn = 1440; // 24 hs
        
        [HttpGet("login")]
        public IActionResult Login([FromQuery]string username, [FromQuery]string password)
        {
            
            // Make call to api.youbim.com/users/getToken to validate the username/password and return the token generated by v1.
            // We'll need to use both tokens

            var claims = new Claim[]
            {
                new Claim(JwtRegisteredClaimNames.Sub, username),
                new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),
                new Claim(JwtRegisteredClaimNames.Iat, DateTime.Now.ToUniversalTime().ToString(), ClaimValueTypes.Integer64)
            };

            var signingKey = new SymmetricSecurityKey(Encoding.ASCII.GetBytes(_issuerSigningKey));
            
            var jwt = new JwtSecurityToken(
                issuer: "https://api.youbim.com",
                audience: "assets",
                claims: claims,
                notBefore: DateTime.Now,
                expires: DateTime.Now.Add(TimeSpan.FromMinutes(_minutesExpiresIn)),
                signingCredentials: new SigningCredentials(signingKey, SecurityAlgorithms.HmacSha256)  
            );

            var encodedJwt = new JwtSecurityTokenHandler().WriteToken(jwt);
            var responseJson = new
            {
                access_token = encodedJwt,
                expires_in = (int)TimeSpan.FromMinutes(_minutesExpiresIn).TotalSeconds
            };
    
            return Ok(responseJson);
        }
    }
}
